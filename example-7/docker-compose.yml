---
version: '3.6'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: elasticsearch-wetalk
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health | grep -v '\"status\":\"red\"'"]
      
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    container_name: kibana-wetalk
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kibana:5601/"]
    depends_on:
      - elasticsearch
  
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.6.0
    container_name: apm-wetalk
    ports:
      - "8200:8200"
    environment:
      - output.elasticsearch.hosts=['http://elasticsearch:9200']
      - apm-server.host="0.0.0.0:8200"
      - setup.kibana.host="kibana:5601"
    command: apm-server -e -d "*" -E apm-server.host="0.0.0.0:8200" -E apm-server.expvar.enabled=true
    depends_on:
      - elasticsearch
      - kibana
    healthcheck:
      test: ["CMD", "curl", "-f" ,"http://apm-server:8200/"]

  mongo-db: 
    image: mongo:latest
    container_name: mongodb-wetalk
    ports:
      - "27017:27017"
  
  auth-service:
    container_name: auth-service
    restart: always
    build: ./auth
    image: auth
    command: ["npm", "run", "dev"]
    ports:
      - "3001:3001"
    environment:
      - FASTIFY_PORT=3001
    volumes:
      - ./auth/:/usr/src/app
      - /usr/src/app/node_modules
    links:
    - apm-server
    - mongo-db

  ticket-service:
    container_name: ticket-service
    restart: always
    build: ./auth
    image: auth
    command: ["npm", "run", "dev"]
    ports:
      - "3002:3002"
    environment:
      - FASTIFY_PORT=3002
    volumes:
      - ./auth/:/usr/src/app
      - /usr/src/app/node_modules
    links:
    - apm-server
    - mongo-db

  gateway:
    container_name: gateway-service
    restart: always
    build: ./gateway
    image: gateway
    command: ["npm", "run", "dev"]
    ports:
      - "3000:3000"
    environment:
      - FASTIFY_PORT=3000
    volumes:
      - ./auth/:/usr/src/app
      - /usr/src/app/node_modules
    links:
    - apm-server    